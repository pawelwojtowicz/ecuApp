#!/bin/bash 

# generic settings
export PROJECT_ROOT=$(pwd)
export UNITTEST_DIR=$PROJECT_ROOT/UnitTestSrc
export BUILD_ROOT=$PROJECT_ROOT/Build
export TARGET_PATH=$BUILD_ROOT/Target
export TARGET_SHARED_LIBS_PATH=$TARGET_PATH/usr/lib
export TARGET_BIN_PATH=$TARGET_PATH/usr/bin
export TARGET_WWW_PATH=$TARGET_PATH/srv/www


# setup runtime variables - required by application to be set correctly
export APP_DIR=$TARGET_PATH/usr/bin
export CONFIG_DIR=$PROJECT_ROOT/Configuration
export LOG_DIR=$TARGET_PATH/var/log
export VAR_RUN=$TARGET_PATH/var/run
export TMP_DIR=$TARGET_PATH/tmp

# create runtime directories
mkdir -p $TARGET_SHARED_LIBS_PATH
mkdir -p $VAR_RUN
mkdir -p $LOG_DIR

# set the system path for shared libs
export LD_LIBRARY_PATH=$TARGET_SHARED_LIBS_PATH

# extracct GTEST if needed
if [ ! -d $PROJECT_ROOT/3rdParty/gmock-1.7.0 ]; then
  unzip $PROJECT_ROOT/3rdParty/gmock-1.7.0.zip -d $PROJECT_ROOT/3rdParty
fi

# create CMAKE setting file
export ECUAPP_CMAKE_SETTINGS_FILE=.settings
echo "SET( ECU_APP_TARGET_DIR ${TARGET_PATH} )" > $ECUAPP_CMAKE_SETTINGS_FILE
echo "SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY  \${CMAKE_CURRENT_BINARY_DIR}/Intermediate )" >> $ECUAPP_CMAKE_SETTINGS_FILE
echo "SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY  \${ECU_APP_TARGET_DIR}/usr/lib )" >> $ECUAPP_CMAKE_SETTINGS_FILE
echo "SET( CMAKE_RUNTIME_OUTPUT_DIRECTORY  \${ECU_APP_TARGET_DIR}/usr/bin )" >> $ECUAPP_CMAKE_SETTINGS_FILE
echo "SET( BUILD_UNIT_TESTS  ON )"  >> $ECUAPP_CMAKE_SETTINGS_FILE

# CMAKE magic
mkdir -p $BUILD_ROOT
cd $BUILD_ROOT
cmake ..
